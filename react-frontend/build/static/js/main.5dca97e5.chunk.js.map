{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","React","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","id","onClick","removeCharacter","Table","Form","_useState","useState","_useState2","_slicedToArray","person","setPerson","handleChange","event","_event$target","target","value","htmlFor","type","onChange","handleSubmit","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","characters","setCharacters","_fetchAll","_asyncToGenerator","_callee2","response","_context2","axios","get","data","users_list","t0","console","log","apply","arguments","_makePostCall","_callee3","_context3","post","useEffect","fetchAll","className","updated","filter","_ref","_callee","character","_context","delete","_x","_x2","_x3","makePostCall","status","concat","_toConsumableArray","container","document","getElementById","ReactDOMClient","createRoot","render","MyApp"],"mappings":"oNACA,SAASA,IACL,OACEC,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,OACJD,IAAAC,cAAA,UAAI,QAQd,SAASC,EAAUC,GACf,IAAMC,EAAOD,EAAME,cAAcC,IAAI,SAACC,EAAKC,GACvC,OACIR,IAAAC,cAAA,MAAIQ,IAAOD,GACPR,IAAAC,cAAA,UAAKM,EAAIG,MACTV,IAAAC,cAAA,UAAKM,EAAII,KACTX,IAAAC,cAAA,UAAKM,EAAIK,IACTZ,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAQY,QAAS,kBAAMV,EAAMW,gBAAgBN,KAAQ,cAKrE,OAAOR,IAAAC,cAAA,aAAQG,GAYJW,MATf,SAAeZ,GACX,OACEH,IAAAC,cAAA,aACED,IAAAC,cAACF,EAAW,MACZC,IAAAC,cAACC,EAAS,CAACG,cAAeF,EAAME,cAAeS,gBAAiBX,EAAMW,oBCc/DE,MA/Cf,SAAcb,GAAO,IAAAc,EACWC,mBACxB,CACIR,KAAM,GACNC,IAAK,KAEZQ,EAAAC,YAAAH,EAAA,GALMI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAOxB,SAASI,EAAaC,GAAO,IAAAC,EACDD,EAAME,OAAtBhB,EAAIe,EAAJf,KAAMiB,EAAKF,EAALE,MAEVL,EADS,QAATZ,EAEI,CAACA,KAAMW,EAAa,KAAGV,IAAKgB,GAI5B,CAACjB,KAAMiB,EAAOhB,IAAKU,EAAY,MAW3C,OACIrB,IAAAC,cAAA,YACID,IAAAC,cAAA,SAAO2B,QAAQ,QAAO,QACtB5B,IAAAC,cAAA,SACI4B,KAAK,OACLnB,KAAK,OACLE,GAAG,OACHe,MAAON,EAAOX,KACdoB,SAAUP,IACdvB,IAAAC,cAAA,SAAO2B,QAAQ,OAAM,OACrB5B,IAAAC,cAAA,SACI4B,KAAK,OACLnB,KAAK,MACLE,GAAG,MACHe,MAAON,EAAOV,IACdmB,SAAUP,IACdvB,IAAAC,cAAA,SAAO4B,KAAK,SAASF,MAAM,SAASd,QArB5C,WACIV,EAAM4B,aAAaV,GACnBC,EAAU,CAACZ,KAAM,GAAIC,IAAK,+BCzBlCqB,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAA/B,EAAAgC,GAAAD,EAAA/B,GAAAgC,EAAAd,OAAAe,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAA/B,EAAAkB,GAAA,OAAAQ,OAAAI,eAAAC,EAAA/B,EAAA,CAAAkB,QAAAwB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAA/B,GAAA,IAAAyC,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAA/B,EAAAkB,GAAA,OAAAa,EAAA/B,GAAAkB,GAAA,SAAA4B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA3B,OAAA4B,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAAnC,MAAAuC,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAAxC,KAAA,SAAAwC,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAAzB,KAAA,QAAAwC,IAAAf,IAAArB,EAAAsB,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAAzC,OAAA0C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA5C,GAAAG,EAAAiC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAArC,UAAAyB,EAAAzB,UAAAD,OAAA4B,OAAAW,GAAA,SAAAO,EAAA7C,GAAA,0BAAA8C,QAAA,SAAAC,GAAAjC,EAAAd,EAAA+C,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAhD,EAAAoC,KAAA,WAAAhD,MAAA,SAAAwD,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAA/D,KAAA,KAAAgE,EAAAD,EAAAvB,IAAA1C,EAAAkE,EAAAlE,MAAA,OAAAA,GAAA,iBAAAA,GAAAU,EAAAiC,KAAA3C,EAAA,WAAA2D,EAAAG,QAAA9D,EAAAmE,SAAAC,KAAA,SAAApE,GAAAgE,EAAA,OAAAhE,EAAA8D,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAA9D,GAAAoE,KAAA,SAAAC,GAAAH,EAAAlE,MAAAqE,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAA+B,IAAA,IAAApC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAtC,EAAAmB,OAAAnB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAN,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAA/D,KAAA,IAAAqE,EAAAlC,EAAA4C,KAAA,6BAAAhB,EAAAvB,MAAAE,EAAA,gBAAA5C,MAAAiE,EAAAvB,IAAAuC,KAAA5C,EAAA4C,MAAA,UAAAhB,EAAA/D,OAAAqE,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAkC,EAAAF,EAAArC,GAAA,IAAA6C,EAAA7C,EAAAmB,SAAAkB,EAAAxD,SAAAgE,GAAA,QAAAC,IAAA3B,EAAA,OAAAnB,EAAAqC,SAAA,eAAAQ,GAAAR,EAAAxD,SAAAkE,SAAA/C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAyC,EAAAP,EAAAF,EAAArC,GAAA,UAAAA,EAAAmB,SAAA,WAAA0B,IAAA7C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA2C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAkB,EAAAxD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAA/D,KAAA,OAAAmC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAqC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAvB,IAAA,OAAA4C,IAAAL,MAAA5C,EAAAqC,EAAAa,YAAAD,EAAAtF,MAAAqC,EAAAmD,KAAAd,EAAAe,QAAA,WAAApD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAyC,GAAA9C,EAAAqC,SAAA,KAAA9B,GAAA0C,GAAAjD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA2C,UAAA,oCAAAhD,EAAAqC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAA/D,KAAA,gBAAA+D,EAAAvB,IAAAkD,EAAAQ,WAAAnC,EAAA,SAAA3B,EAAAN,GAAAgB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA7D,EAAAuB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAArF,GAAA,GAAAsF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA/F,EAAAiC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAAxF,MAAAsG,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAxF,WAAAmF,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAAzE,WAAAmF,EAAAF,MAAA,UAAApC,EAAApC,UAAAqC,EAAAlC,EAAAyC,EAAA,eAAArD,MAAA8C,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAA9C,MAAA6C,EAAApB,cAAA,IAAAoB,EAAA8D,YAAApF,EAAAuB,EAAAzB,EAAA,qBAAAf,EAAAsG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAA/H,QAAAuB,EAAA0G,KAAA,SAAAH,GAAA,OAAArG,OAAAyG,eAAAzG,OAAAyG,eAAAJ,EAAA/D,IAAA+D,EAAAK,UAAApE,EAAAvB,EAAAsF,EAAAxF,EAAA,sBAAAwF,EAAApG,UAAAD,OAAA4B,OAAAiB,GAAAwD,GAAAvG,EAAA6G,MAAA,SAAAzE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAjD,WAAAc,EAAAmC,EAAAjD,UAAAU,EAAA,kBAAA6B,OAAA1C,EAAAoD,gBAAApD,EAAA8G,MAAA,SAAAvF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAArD,EAAAsG,oBAAA9E,GAAAwF,IAAA9B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAAlE,MAAAsH,EAAA9B,UAAAlC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAA/C,EAAAiH,KAAA,SAAAC,GAAA,IAAAC,EAAAjH,OAAAgH,GAAAD,EAAA,WAAAzI,KAAA2I,EAAAF,EAAArB,KAAApH,GAAA,OAAAyI,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAd,QAAA,KAAA3H,EAAAyI,EAAAI,MAAA,GAAA7I,KAAA2I,EAAA,OAAAjC,EAAAxF,MAAAlB,EAAA0G,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAAlF,EAAA8C,SAAAd,EAAA7B,UAAA,CAAAsG,YAAAzE,EAAA+D,MAAA,SAAAuB,GAAA,GAAA5E,KAAA6E,KAAA,EAAA7E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAN,SAAAyC,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAAyB,EAAA,QAAA7I,KAAAiE,KAAA,MAAAjE,EAAA+I,OAAA,IAAApH,EAAAiC,KAAAK,KAAAjE,KAAAyH,OAAAzH,EAAAgJ,MAAA,MAAA/E,KAAAjE,QAAAoG,IAAA6C,KAAA,WAAAhF,KAAAiC,MAAA,MAAAgD,EAAAjF,KAAAiD,WAAA,GAAAG,WAAA,aAAA6B,EAAA/H,KAAA,MAAA+H,EAAAvF,IAAA,OAAAM,KAAAkF,MAAAnD,kBAAA,SAAAoD,GAAA,GAAAnF,KAAAiC,KAAA,MAAAkD,EAAA,IAAA9F,EAAAW,KAAA,SAAAoF,EAAAC,EAAAC,GAAA,OAAArE,EAAA/D,KAAA,QAAA+D,EAAAvB,IAAAyF,EAAA9F,EAAAmD,KAAA6C,EAAAC,IAAAjG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAyC,KAAAmD,EAAA,QAAA5B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA7C,KAAA6E,KAAA,KAAAU,EAAA7H,EAAAiC,KAAAiD,EAAA,YAAA4C,EAAA9H,EAAAiC,KAAAiD,EAAA,iBAAA2C,GAAAC,EAAA,IAAAxF,KAAA6E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA9C,KAAA6E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAAvF,KAAA6E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAAhE,MAAA,6CAAAxB,KAAA6E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAf,OAAA,SAAA9E,EAAAwC,GAAA,QAAAgE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA6E,MAAAnH,EAAAiC,KAAAiD,EAAA,eAAA5C,KAAA6E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAAvI,GAAA,aAAAA,IAAAuI,EAAA5C,QAAAnD,MAAA+F,EAAA1C,aAAA0C,EAAA,UAAAxE,EAAAwE,IAAArC,WAAA,UAAAnC,EAAA/D,OAAA+D,EAAAvB,MAAA+F,GAAAzF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAiD,EAAA1C,WAAAnD,GAAAI,KAAA0F,SAAAzE,IAAAyE,SAAA,SAAAzE,EAAA+B,GAAA,aAAA/B,EAAA/D,KAAA,MAAA+D,EAAAvB,IAAA,gBAAAuB,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAA8C,KAAAwC,KAAAvB,EAAAvB,IAAA,WAAAuB,EAAA/D,MAAA8C,KAAAkF,KAAAlF,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAA/D,MAAA8F,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAA+F,OAAA,SAAA5C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA0F,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAgG,MAAA,SAAA/C,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAA/D,KAAA,KAAA2I,EAAA5E,EAAAvB,IAAAyD,EAAAP,GAAA,OAAAiD,GAAA,UAAArE,MAAA,0BAAAsE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAxD,SAAAkC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAN,SAAAyC,GAAAvC,IAAAtC,EAsEeyI,MAlEf,WAAe,IAAAzJ,EACuBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC0J,EAAUxJ,EAAA,GAAEyJ,EAAazJ,EAAA,GAwBT,SAAA0J,IAUtB,OAVsBA,EAAAC,YAAA9I,IAAA2G,KAAvB,SAAAoC,IAAA,IAAAC,EAAA,OAAAhJ,IAAAuB,KAAA,SAAA0H,GAAA,cAAAA,EAAAzB,KAAAyB,EAAA9D,MAAA,cAAA8D,EAAAzB,KAAA,EAAAyB,EAAA9D,KAAA,EAE4B+D,IAAMC,IAAI,+BAA8B,OAAjD,OAARH,EAAQC,EAAAzE,KAAAyE,EAAAtE,OAAA,SACPqE,EAASI,KAAKC,YAAU,OAIZ,OAJYJ,EAAAzB,KAAA,EAAAyB,EAAAK,GAAAL,EAAA,SAI/BM,QAAQC,IAAGP,EAAAK,IAAQL,EAAAtE,OAAA,UACZ,GAAK,yBAAAsE,EAAAtB,SAAAoB,EAAA,kBAEhBU,MAAA9G,KAAA+G,WAU0B,SAAAC,IAU1B,OAV0BA,EAAAb,YAAA9I,IAAA2G,KAA3B,SAAAiD,EAA4BvK,GAAM,IAAA2J,EAAA,OAAAhJ,IAAAuB,KAAA,SAAAsI,GAAA,cAAAA,EAAArC,KAAAqC,EAAA1E,MAAA,cAAA0E,EAAArC,KAAA,EAAAqC,EAAA1E,KAAA,EAEN+D,IAAMY,KAAK,8BAA+BzK,GAAO,OAA1D,OAAR2J,EAAQa,EAAArF,KAAAqF,EAAAlF,OAAA,SACPqE,GAAQ,OAII,OAJJa,EAAArC,KAAA,EAAAqC,EAAAP,GAAAO,EAAA,SAIfN,QAAQC,IAAGK,EAAAP,IAAQO,EAAAlF,OAAA,UACZ,GAAK,yBAAAkF,EAAAlC,SAAAiC,EAAA,kBAEhBH,MAAA9G,KAAA+G,WAGD,OAtBAK,oBAAU,YAbT,WAEsB,OAAAlB,EAAAY,MAAA9G,KAAA+G,YAYnBM,GAAWjG,KAAM,SAAAF,GACVA,GAEC+E,EAAc/E,OAmBxB7F,IAAAC,cAAA,OAAKgM,UAAU,aACbjM,IAAAC,cAACc,EAAK,CAACV,cAAesK,EAAY7J,gBAzDtC,SAA6BN,GAC3B,IAAM0L,EAAUvB,EAAWwB,OAAM,eAAAC,EAAAtB,YAAA9I,IAAA2G,KAAC,SAAA0D,EAAOC,EAAWjE,GAAC,OAAArG,IAAAuB,KAAA,SAAAgJ,GAAA,cAAAA,EAAA/C,KAAA+C,EAAApF,MAAA,UAC9CkB,IAAM7H,EAAK,CAAA+L,EAAApF,KAAA,QACW,OAAvBoE,QAAQC,IAAIc,GAAWC,EAAApF,KAAA,EACjB+D,IAAMsB,OAAO,+BAAiCF,EAAU1L,IAAG,cAAA2L,EAAA5F,OAAA,SAE5D0B,IAAM7H,GAAK,wBAAA+L,EAAA5C,SAAA0C,MACrB,gBAAAI,EAAAC,GAAA,OAAAN,EAAAX,MAAA9G,KAAA+G,YANgC,IAOjCH,QAAQC,IAAI,OACZZ,EAAcsB,MAiDZlM,IAAAC,cAACe,EAAI,CAACe,aA7CV,SAAoBV,IA2BlB,SAEyBsL,GAAA,OAAAhB,EAAAF,MAAA9G,KAAA+G,YA5BzBkB,CAAavL,GAAQ0E,KAAK,SAAAF,GACrBA,GAA4B,MAAlBA,EAAOgH,QAClBjC,EAAa,GAAAkC,OAAAC,YAAKpC,GAAU,CAAEtJ,YCnBhC2L,SAAYC,SAASC,eAAe,SAI7BC,IAAeC,WAAWJ,GAIlCK,OAAOrN,IAAAC,cAACqN,EAAK","file":"static/js/main.5dca97e5.chunk.js","sourcesContent":["import React from 'react'\r\nfunction TableHeader()  {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Job</th>\r\n          <th>Id</th>\r\n        </tr>\r\n      </thead>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction TableBody(props) {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return(\r\n            <tr key = {index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>{row.id}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\nfunction Table(props) {\r\n    return (\r\n      <table>\r\n        <TableHeader />\r\n        <TableBody characterData={props.characterData} removeCharacter={props.removeCharacter}/>\r\n      </table>\r\n    );\r\n} \r\n\r\nexport default Table\r\n  \r\n  \r\n  \r\n  ","import React, {useState} from 'react';\r\n\r\nfunction Form(props) {\r\n    const [person, setPerson] = useState(\r\n        {\r\n            name: \"\",\r\n            job: \"\",\r\n        }\r\n    );\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        if (name === \"job\")\r\n            setPerson(\r\n                {name: person['name'], job: value}\r\n            );\r\n        else\r\n            setPerson(\r\n                {name: value, job: person['job']}\r\n            );\r\n    }\r\n\r\n    \r\n\r\n    function submitForm() {\r\n        props.handleSubmit(person);\r\n        setPerson({name: '', job: ''});\r\n    }  \r\n\r\n    return(\r\n        <form>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={person.name}\r\n                onChange={handleChange} />\r\n            <label htmlFor=\"job\">Job</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"job\"\r\n                id=\"job\"\r\n                value={person.job}\r\n                onChange={handleChange} />\r\n            <input type=\"button\" value=\"Submit\" onClick={submitForm} />\r\n        </form>\r\n    );\r\n}\r\nexport default Form;","import React, {useState, useEffect} from 'react'\nimport Table from './Table'\nimport Form from './Form'\nimport axios from 'axios'\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n\n  function removeOneCharacter (index) {\n    const updated = characters.filter(async (character, i) => {\n        if(i === index){\n          console.log(character);\n          await axios.delete('http://localhost:5000/users/' + character.id);\n        }\n        return i !== index\n    });\n    console.log(\"hit\");\n    setCharacters(updated);\n  }\n  \n\n  function updateList(person) {\n    makePostCall(person).then(result => {\n      if(result && result.status === 201){\n        setCharacters([...characters, person]);\n      }\n    })\n    \n  }\n\n  async function fetchAll(){\n    try {\n       const response = await axios.get('http://localhost:5000/users');\n       return response.data.users_list;     \n    }\n    catch (error){\n       //We're not handling errors. Just logging into the console.\n       console.log(error); \n       return false;         \n    }\n  }\n  useEffect(() => {\n      fetchAll().then( result => {\n          if(result){\n              //console.log(result);\n              setCharacters(result);\n          }\n      })\n  })\n\n  async function makePostCall(person){\n    try {\n       const response = await axios.post('http://localhost:5000/users', person);\n       return response;     \n    }\n    catch (error){\n       //We're not handling errors. Just logging into the console.\n       console.log(error); \n       return false;         \n    }\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter}/>\n      <Form handleSubmit={updateList}/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOMClient from 'react-dom/client'\nimport MyApp from './App'\nimport './index.css'\n\nconst container = document.getElementById('root');\n\n// Create a root\n\nconst root = ReactDOMClient.createRoot(container);\n\n// Initial render:\n\nroot.render(<MyApp />);\n\n"],"sourceRoot":""}